
#MUST END WITH SLASH
main_output_dir: 2021-08-23_two_sample_example_output/

sample_tbl: config/local_ward_ipsc_example_sample_tbl.csv

annotation_gtf: data/annotation/gencode.v34.annotation.gtf

# One of 'gencode' if GENCODE or "ensembl" for ENSEMBL other string
# Used for Salmon index &
# scripts/filter_tx_by_intron_chain.py (for gene type filtering)
annotation_source: "gencode"

# An index file should also exist in same directory (suffixed with .fai)
# Can be generated using samtools faidx
genome_fasta: data/annotation/genome.fa

# Put "none" for now. Other options possibly added in future...
pre_stringtie_processing: "none"

# What is strandedness of library prep used in samples?
# "--rf" - library is stranded with read 2 corresponding to transcribed strand ('fr-firststrand'/ 'reverse')
# "--fr" - library is stranded with read 1 corresponding to transcribed strand ('fr-secondstrand'/ 'stranded')
# "" - library is unstranded
# Handy blog posts if unsure:
# https://rnabio.org/module-09-appendix/0009/12/01/StrandSettings/
# https://littlebitofdata.com/en/2017/08/strandness_in_rnaseq/
strandedness: "--rf"

salmon_index_threads: 2
salmon_quant_threads: 2

salmon_kmer_size: 31

####------
## Stringtie options/parameters
####------


# Path to df containing Stringtie parameter values to try (1 combo per row)
# -j, -f, -c, -t are defined here
stringtie_params_csv: config/stringtie_params.csv

# Use annotated poly(A) sites to help guide transcript assembly?
# put True if yes, False if no (NO QUOTES around True/False)
use_point_features: False

# Path to 4 column TSV file of point features passed to '--ptf'
# Columns are <chromosome> <coordinate> <strand> <type (TSS/CPAS)>
# To generate, can use <scripts/bed_to_point_features.py> (currently just with PolyASite atlas v2)
# Only needed if use_point_features is set to True
point_features_path: data/atlas.cluster.2.0.GRCh38.96_point_features.chr_prefix.tsv

# 'any' or 'transcript'
# when filtering assembled transcripts, valid should have intron chain match up until penultimate intron
# Should these introns come from the same transcript ('transcript') i.e. only differs in last exon
# Or should these introns be able to come from any transcript ('any')?
intron_chain_filter_mode: "any"

# Maximum number of consective 3'end non-matched introns for a transcript to be considered valid
# Default: 2 (equivalent to allowing the penultimate exon of transcript to also be novel)
max_terminal_non_match: 2

# Number of threads/cpus for scripts/filter_tx_by_intron_chain.py
# Default: 1
intron_chain_filter_threads: 1

# Minimum length of 3'end extension for novel 3'UTR extension events to be retained
# Applied to 'internal_exon_bleedthrough' & 'ds_3utr_extension' events
# Default: 100
min_extension_length: 100


# Default: 0.01
# can be a single value between 0-1 or a list of values [val1, val2]
min_isoform_fraction_abundance: [0.01, 0.05]

# Default: 200
min_isoform_length: 200

# True or False (NO QUOTES)
# StringTie Default: False
# PAPA Default: False
report_gene_abundances: False
gene_abundances_suffix: ".gene_abundances.tsv"

# True or False (NO QUOTES)
# StringTie Default: False
# PAPA Default: True
report_covered_annot_txipts: True
covered_txipts_suffix: ".annotated.fully_covered.gtf"

# Junctions should have spliced reads aligning with at least X overhang on either side
# passed to <-a> flag
# Must be an integer
# Default: 10
min_junction_overhang: 10

# Junctions should have at least n spliced reads aligning across it
# Can be a fraction
# float
# can be a single value starting from 1 or a list of values [val1, val2]
# Default: 1
min_junction_reads: [1,5]

# Trim ends of assembled transcripts based on sudden drops in coverage?
# controls whether <-t> flag is passed
# Logical - True or False (NO QUOTES)
# Default: False
disable_end_trimming: False

# Minimum coverage for predicted transcripts to be reported in output
# float
# can be a single value starting from 1 or a list of values [val1, val2]
# Default: 1
min_txipt_coverage: [1,1.5]

# Minimum coverage for single-exon predicted transcripts
# float
# Default: 4.75
min_single_exon_coverage: 4.75

# Assemble transcripts conservatively, with options below
# -t (disable_end_trimming: True), -c 1.5 (min_txipt_coverage: 1.5) -f 0.05 (min_isoform_fraction_abundance: 0.05)
# controls whether <--conservative> flag is passed
conservative_mode: False

# Minimum locus gap separation value.
# Reads that are mapped closer than this distance are merged together in the same processing bundle
# int
# Default: 50
min_locus_gap: 50

# Max fraction of multi-mapped reads allowed at a given locus
# float between 0.0 & 1.0
# Default: 0.95
max_fraction_multi_mapped: 0.95

# prefix for name of output transcripts (passed to <-l>)
# String
label: "PAPA"

# Stringtie reports assembled transcripts matching reference transcripts in its assembled GTF
# Since these can't be novel they can be ignored for transcript filtering/analysis
# DEPRECATED - 3'UTR EXTENSIONS AND BLEEDTHROUGH EVENTS APPEAR TO BE ASSIGNED REFERENCE_ID

stringtie_ref_string: "reference_id"

# Merge parameters

min_length_merge: 50
min_cov_merge: 0
min_fpkm_merge: 0
min_tpm_merge: 0
min_iso_frac_merge: 0.01

# True/False (no quotes)
keep_retained_introns_merge: False


####
# Names of subdirectories for individual steps. No need to change these unless you don't like them!
####
stringtie_subdir_name: stringtie/
salmon_subdir_name: salmon/
logs_subdir_name: logs/
